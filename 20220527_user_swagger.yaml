swagger: "2.0"
info:
  description: "Esta API é fornecida pela Curta o Código para o exemplo de cadastro de APIs de usuários."
  version: "1.0.0"
  title: "Curta o Codigo - User Registration API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "contato.developer@curtaocodigo.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/v1"
tags:
- name: "user"
  description: "Operações de registro de usuário"
  externalDocs:
    description: "Saiba mais em"
    url: "http://developers.curtaocodigo.com"
schemes:
- "https"
- "http"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Cadastrar um novo usuário"
      description: ""
      operationId: "addUser"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Usuário a ser cadastrado na requisição"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "201":
          description: "Usuário cadastrado com sucesso"
        "422":
          description: "Informações inválidas de cadastro de usuário"
      security:
      - user_registration_auth:
        - "write:users"
        - "read:users"
    put:
      tags:
      - "user"
      summary: "Atualizar um usuário"
      description: ""
      operationId: "updateUser"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Usuário a ser atualizado na requisição"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "Usuário atualizado com sucesso"
        "400":
          description: "ID fornecido inválido"
        "404":
          description: "Usuário não encontrado"
        "422":
          description: "Informações inválidas de atualização de usuário"
      security:
      - user_registration_auth:
        - "write:users"
        - "read:users"
  /user/{userId}:
    get:
      tags:
      - "user"
      summary: "Buscar usuário por ID"
      description: "Returna um usuário"
      operationId: "getUserById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID do usuário a retornar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Usuário retornado com sucesso"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "ID fornecido inválido"
        "404":
          description: "Usuário não encontrado"
      security:
      - api_key: []
    patch:
      tags:
      - "user"
      summary: "Atualizar informações específicas do usuário"
      description: ""
      operationId: "updateUserWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID do usuário que será atualizado"
        required: true
        type: "integer"
        format: "int64"
      - name: "name"
        in: "formData"
        description: "Nome do usuário que será atualizado"
        required: false
        type: "string"
      - name: "status"
        in: "formData"
        description: "Status do usuário que será atualizado"
        required: false
        type: "string"
      responses:
        "200":
          description: "Usuário atualizado com sucesso"
        "400":
          description: "ID fornecido inválido"
        "404":
          description: "Usuário não encontrado"
        "422":
          description: "Informações inválidas de atualização de usuário"
      security:
      - user_registration_auth:
        - "write:users"
        - "read:users"
    delete:
      tags:
      - "user"
      summary: "Remover um usuário"
      description: ""
      operationId: "deleteUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "userId"
        in: "path"
        description: "ID para remover um usuário"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Usuário removido com sucesso"
        "400":
          description: "ID fornecido inválido"
        "404":
          description: "Usuário não encontrado"
      security:
      - user_registration_auth:
        - "write:users"
        - "read:users"
  /user/{userId}/uploadImage:
    post:
      tags:
      - "user"
      summary: "Upload de arquivo de imagem do usuário"
      description: ""
      operationId: "uploadFile"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID do usuário"
        required: true
        type: "integer"
        format: "int64"
      - name: "additionalMetadata"
        in: "formData"
        description: "Dados adicionais a serem informados ao servidor"
        required: false
        type: "string"
      - name: "file"
        in: "formData"
        description: "Arquivo de upload"
        required: false
        type: "file"
      responses:
        "200":
          description: "Usuário atualizado com sucesso"
        "400":
          description: "ID fornecido inválido"
        "404":
          description: "Usuário não encontrado"
        "422":
          description: "Informações inválidas de atualização de usuário"
      security:
      - user_registration_auth:
        - "write:users"
        - "read:users"
securityDefinitions:
  user_registration_auth:
    type: "oauth2"
    authorizationUrl: "http://localhost:8080/oauth/dialog"
    flow: "implicit"
    scopes:
      write:users: "modificar usuários"
      read:users: "ler usuários"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  User:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "status do usuário"
        enum:
        - "enabled"
        - "disabled"
        - "pending_approval"
    xml:
      name: "User"
externalDocs:
  description: "Saiba mais em"
  url: "http://developers.curtaocodigo.com"