swagger: "2.0"
info:
  description: "Esta API é fornecida pela Curta o Código para o exemplo de cadastro de APIs de usuários."
  version: "1.0.0"
  title: "Curta o Codigo - User Registration API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "contato.developer@curtaocodigo.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/v1"
tags:
  - name: "users"
    description: "Operações de registro de usuário"
    externalDocs:
      description: "Saiba mais"
      url: "http://developers.curtaocodigo.com"
schemes:
  - "https"
  - "http"
paths:
  /users:
    get:
      tags:
        - "users"
      summary: "Buscar usuários"
      description: "Retorna usuários"
      operationId: "getUsers"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Usuários retornado com sucesso"
          schema:
            $ref: "#/definitions/ArrayOfUsers"
      security:
        - api_key: []
    post:
      tags:
        - "users"
      summary: "Cadastrar um novo usuário"
      description: ""
      operationId: "addUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Usuário a ser cadastrado na requisição"
          required: true
          schema:
            $ref: "#/definitions/CreateUser"
      responses:
        "201":
          description: "Usuário cadastrado com sucesso"
        "422":
          description: "Informações inválidas de cadastro de usuário"
      security:
        - user_registration_auth:
            - "write:users"
            - "read:users"
  /users/{userId}:
    get:
      tags:
        - "users"
      summary: "Buscar usuário por ID"
      description: "Returna um usuário"
      operationId: "getUserById"
      produces:
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          description: "ID do usuário a retornar"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Usuário retornado com sucesso"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "ID fornecido inválido"
        "404":
          description: "Usuário não encontrado"
      security:
        - api_key: []
    patch:
      tags:
        - "users"
      summary: "Atualizar informações específicas do usuário"
      description: "Serao atualizados apenas o nome e a idade"
      operationId: "updateUserInfo"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          description: "ID do usuário a atualizar"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Usuário a ser atualizado na requisição"
          required: true
          schema:
            $ref: "#/definitions/PatchUser"
      responses:
        "200":
          description: "Usuário atualizado com sucesso"
        "400":
          description: "ID fornecido inválido"
        "404":
          description: "Usuário não encontrado"
        "422":
          description: "Informações inválidas de atualização de usuário"
      security:
        - user_registration_auth:
            - "write:users"
            - "read:users"
    delete:
      tags:
        - "users"
      summary: "Remover um usuário"
      description: ""
      operationId: "deleteUser"
      produces:
        - "application/json"
      parameters:
        - name: "api_key"
          in: "header"
          required: false
          type: "string"
        - name: "userId"
          in: "path"
          description: "ID para remover um usuário"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Usuário removido com sucesso"
        "400":
          description: "ID fornecido inválido"
        "404":
          description: "Usuário não encontrado"
      security:
        - user_registration_auth:
            - "write:users"
            - "read:users"
    put:
      tags:
        - "users"
      summary: "Atualizar um usuário"
      description: ""
      operationId: "updateUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          description: "ID do usuário a atualizar"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Usuário a ser atualizado na requisição"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: "Usuário atualizado com sucesso"
        "400":
          description: "ID fornecido inválido"
        "404":
          description: "Usuário não encontrado"
        "422":
          description: "Informações inválidas de atualização de usuário"
      security:
        - user_registration_auth:
            - "write:users"
            - "read:users"
securityDefinitions:
  user_registration_auth:
    type: "oauth2"
    authorizationUrl: "http://localhost:8080/oauth/dialog"
    flow: "implicit"
    scopes:
      write:users: "modificar usuários"
      read:users: "ler usuários"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  CreateUser:
    type: "object"
    required:
      - "name"
    properties:
      name:
        type: "string"
        example: "John"
      age:
        type: "integer"
        format: "int64"
        example: 18
      group:
        type: "string"
        description: "grupo do usuário"
        enum:
          - "user"
          - "manager"
          - "admin"
      status:
        type: "string"
        description: "status do usuário"
        enum:
          - "enabled"
          - "disabled"
          - "pending_approval"
  PatchUser:
    type: "object"
    required:
      - "name"
    properties:
      name:
        type: "string"
        example: "John"
      age:
        type: "integer"
        format: "int64"
        example: 18
  User:
    type: "object"
    required:
      - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      name:
        type: "string"
        example: "John"
      age:
        type: "integer"
        format: "int64"
        example: 18
      group:
        type: "string"
        description: "grupo do usuário"
        enum:
          - "user"
          - "manager"
          - "admin"
      status:
        type: "string"
        description: "status do usuário"
        enum:
          - "enabled"
          - "disabled"
          - "pending_approval"
  ArrayOfUsers:
    type: array
    items:
      $ref: '#/definitions/User'
    example:
      - id: 1
        name: Mark
        age: 18
      - id: 2
        name: Tony
        age: 20
externalDocs:
  description: "Saiba mais"
  url: "http://developers.curtaocodigo.com"